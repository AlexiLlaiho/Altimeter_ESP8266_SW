/*
 * ESP8266 SPIFFS Basic Reading and Writing File 
 *
 */
 
#include "Arduino.h"
#include <ESP8266WiFi.h>
#include <FS.h>   //Include File System Headers
#include "Calculate_Alt.h"
#include "Wire.h"
#include "Ticker.h"
#include <ESP8266WebServer.h>
#include <time.h>

//================ Server Configuration =========================================
const char *ssid = "bb-alex";
const char *password = "AuroraSky1819";
IPAddress ip(192, 168, 43, 113); //IP adres dlia prosmotra grafika web-brayzerom
IPAddress gateway(192, 168, 1, 1);
IPAddress subnet(255, 255, 255, 0);
ESP8266WebServer server(80);
//=============== Server End Configuration ======================================

//=============== Data and Graphics Configuration ===============================
const uint16_t quant_points = 216; //max kol tochek trenda
float h[quant_points];
float timepoints[quant_points];
int Data_Length;
uint16_t tick = 0;
time_t tnow[quant_points];
float Data_Massiv[] = {0.161300141863830, 2.33587979009281, 2.89377451312748, 5.61579485325329, 7.23848671481484, 8.53626493967985, 10.5842081075940, 12.6027873399616,
                       15.3592333676320, 16.9022596803940, 17.4521767750959, 20.5533341827567, 21.6461926960553, 23.1953692523288, 25.2144228711478, 26.7242244682244,
                       28.5341852669637, 30.8040521394785, 32.5655674897973, 34.3537291526003, 35.9157348543681, 37.1377539231945, 39.5008858811129, 41.5604991581780,
                       43.0038109882364, 44.9532650458325, 46.6466369685864, 48.1232534368499, 50.0881614401290, 51.5495294445867, 53.8379472609559, 55.0130218250521,
                       56.8221960054067, 58.6857218202440, 59.8310004656873, 62.9315140878445, 64.3832714475512, 65.8449500756777, 68.2682324191714, 69.1294022172011,
                       71.3978986947458, 73.1418516018035, 75.0957620217497, 76.8795718647055, 78.3119645962312, 80.3481274682840, 82.0933934370945, 84.1168836148300,
                       86.0422654149976, 87.8327819892843, 89.0266184391177, 91.0946362987677, 92.4929077440582, 94.3088069204111, 96.4265166301404, 98.6740748067712,
                       99.7691002258739, 99.6947469771613, 99.0989913459853, 99.0852068416443, 98.0066140448177, 97.9264339059162, 97.6657581063337, 97.4135163986976,
                       97.1299302353178, 96.2757793399526, 95.3858562401421, 95.1939761154887, 94.6815254800040, 95.2884705005340, 95.9732948956826, 96.2573984952339,
                       95.8502499069462, 96.0495585877489, 95.4285206891523, 95.1122947693211, 94.9812626825952, 95.4294336330807, 95.1047629131371, 94.9741594137805,
                       95.3337685053155, 94.8704507723180, 94.7173187761620, 95.0092851871149, 94.1666356732178, 94.4919627848776, 94.4085019096445, 93.9598609180093,
                       93.9726764860438, 93.4332222806781, 93.3135896264531, 93.5644378749277, 93.6246516697902, 94.0586228359076, 92.9579082589123, 93.0891747674964,
                       92.8832271325114, 92.2030685847674, 92.5262856139423, 91.9945718076862, 92.6600881190489, 92.0165658354240, 92.1880033100645, 91.8696167811255,
                       91.9990316985175, 91.6028774914826, 91.8049650564749, 91.7547843972041, 91.9215417950172, 91.2247383993952, 90.5164688792907, 90.7810988359217,
                       91.3143537585241, 90.4613288736074, 90.9462616210449, 90.5701904001237, 90.8389844469384, 89.6947054603132, 90.0986659923305, 89.6706218145448,
                       90.7803778693415, 90.0305411283913, 90.0716670534977, 89.2155213827265, 89.2673907857925, 89.2012346373476, 89.4875028454893, 88.9496138802864,
                       89.1184378975717, 88.1674305701494, 88.5518204607904, 88.2858995025757, 87.9348583532829, 88.4353678553945, 88.2425706792239, 88.0430194247960,
                       87.5078720770943, 88.1212231436252, 87.7630292833037, 87.4432556510228, 87.4148423979482, 87.2043768296329, 86.6329117495887, 86.9472801686441,
                       86.6585655066524, 86.4892135685725, 86.3110549634235, 86.3729083273279, 85.8071847393578, 86.5722442869122, 86.3139934905593, 86.0269671046299,
                       85.8975441343142, 85.5435263847535, 85.9635810447613, 85.4930102162704, 85.1936164109866, 85.6883911906507, 85.0905441433069, 84.8562667509065,
                       84.8198493808021, 84.5285975870313, 84.3219369697496, 85.2907753677582, 84.9046247379889, 84.3752360078942, 83.7808399523171, 83.7733350509563,
                       83.8550152258533, 84.0204002786113, 83.2583741337281, 82.8340153133812, 82.9732462722711, 83.3830287100424, 83.2753815414526, 83.1684792858012,
                       82.8688900641790, 82.8380821888813, 82.5151295551370, 82.7915819435898, 81.9994671188615, 82.4194843270560, 81.9033626461426, 81.9325093784335,
                       82.0738104639061, 82.0947026561742, 81.3226838551431, 81.9111730728590, 81.6060184024368, 81.2626157940599, 81.0994091007531, 80.9676935550798,
                       80.8170431737172, 80.7898891474502, 80.6733625668773, 80.7807942971862, 80.8660684661427, 80.4230497908281, 80.0950614586061, 80.2205325672490,
                       79.9629436390231, 79.4740451970527, 79.9427420094620, 79.6250940358667, 79.4485279427525, 79.4375493607802, 79.2363973573393, 78.7505297288361,
                       78.8592741582816, 78.7391590698232, 78.4983720470801, 79.0376065385217, 78.1452566562747, 78.1378309450897, 77.9443740954145, 77.6807117606857,
                       77.8503036048609, 77.7007543911429, 78.1169972144499, 77.4582680373686, 77.0887114362559, 77.7640126495587, 77.5283792041899, 76.9640875248337,
                       76.4561275489288, 76.6495871151886, 76.6111931494053, 76.6157959363022, 76.3296263663898, 76.4160020339939, 76.2755437229524, 75.6577717880748,
                       75.6235871834233, 75.5606436319406, 75.5056301950393, 75.4368028081426, 75.4117161725312, 74.3742222577015, 75.0208710678612, 75.4057099820399,
                       74.5879650404273, 75.0630939089241, 74.7630717605295, 74.5242737310101, 74.4627111103745, 73.8134586558775, 74.1326136161774, 74.5141593653036,
                       73.9374797925147, 73.7953875441696, 73.4377247263137, 73.5237313411190, 73.4776795639100, 73.4108917273454, 73.0461328376057, 72.9620390849955,
                       73.5150827261036, 72.1054692689739, 73.3268091642598, 72.6342445703066, 72.7079937059994, 71.7837261176266, 71.9809650908611, 71.9495562109931,
                       72.0347901674888, 71.2819152507676, 71.7994657580476, 71.1691213002204, 71.4278324746501, 71.4786822267211, 71.2560934502758, 71.3577655113937,
                       71.2097985933684, 70.5877031391434, 70.7350923073529, 70.2496621182014, 70.0114389037049, 70.5604232401708, 70.1579904148453, 70.0164997857399,
                       70.1813136398189, 69.9613505693454, 69.7630358122851, 69.9080508286142, 69.6869122976900, 69.3549044372403, 68.9508671291893, 68.8375093675976,
                       69.2656060212821, 68.2994263435194, 68.6506368791319, 67.9483213070530, 68.7141248644585, 68.5414903508407, 68.1583240851678, 68.0117242961746,
                       67.1620902839117, 67.9573271569255, 67.0002449841329, 66.8371913681297, 67.4319555732122, 66.9984311650515, 67.2814226465497, 67.2360688018279,
                       67.1652952236843, 66.5756277225078, 66.7927887470728, 66.5631654652172, 66.6557964596637, 66.4438225841005, 66.4273419879182, 65.9933940997453,
                       65.8638150232773, 66.0853074817143, 65.0208788213980, 65.3815995384685, 65.0267971251801, 65.1682000193104, 65.3525792387373, 65.2806936048952,
                       64.6034923673187, 64.6416544863178, 64.6990829223617, 64.4454164473966, 64.4985210267010, 64.4029547430095, 63.8789869924407, 63.9799263803439,
                       63.2683470803742, 64.1265839732782, 63.4692482318245, 63.1718204679220, 63.3317920550959, 62.8543814007331, 63.1517181748122, 62.8647759611642,
                       63.5613090728780, 63.1245150763216, 61.9089095091674, 62.6653735396410, 61.9885340973794, 62.2064589061585, 62.2072966821183, 62.2572956687651,
                       61.8260613753018, 62.2558655040865, 61.5136943145890, 61.6312290963716, 61.6073956963110, 61.3085320379390, 61.4222612957370, 61.1299394014770,
                       60.6727316050235, 60.2413634547069, 61.2155533446894, 60.3516164334904, 60.4389833768159, 60.4519255466665, 60.1920545591429, 59.7615575962833,
                       59.7676610853871, 59.7455084759558, 60.1016630075739, 59.2747307531206, 59.6433760003091, 59.3755624021073, 59.0878174474840, 58.7158836363347,
                       58.8227331737349, 58.7569683753849, 58.2171569377768, 58.5906301335839, 58.1612874772356, 58.2547032837348, 58.2588394624090, 57.7615792423486,
                       57.8214985517610, 57.8879942873830, 57.1072177173714, 57.8437682325964, 58.1353138036045, 57.5707956129451, 57.0632438616199, 57.1615622640805,
                       56.5971800265687, 57.3463350982715, 56.9401867811283, 56.7691791941033, 56.1452131815357, 56.3789602004374, 55.9904871746674, 55.9395466345586,
                       55.7369724851300, 55.4752553754341, 55.3853517840604, 55.4700062599060, 54.8983162348709, 55.4652556328765, 55.1226359733423, 55.2427235602160,
                       54.9888700526377, 54.9312615767365, 54.2130391533679, 54.2268961444178, 54.2738769568993, 54.3158730375210, 54.4965963957312, 53.9459865478827,
                       54.2864406755650, 53.9256029036349, 54.0102104855708, 53.5710595805358, 53.2109306814383, 52.8385557386491, 53.2046221588939, 53.2785408706790,
                       52.8201990208724, 52.6207395351761, 52.5653829155387, 52.2039974696651, 52.2600725155278, 52.2287536531982, 52.1717277918368, 52.0138405241160,
                       52.0913760183423, 51.8157707682552, 52.2021800952068, 51.6265826086215, 51.9493235916400, 51.0660390162516, 51.3159395714476, 50.9549002016109,
                       51.0880182127653, 50.9611546988173, 50.0021689762982, 50.1348625152666, 49.9756713808310, 50.4035288092346, 50.5990358443773, 49.9349311914869,
                       50.1516723615149, 49.9466374911805, 49.3424857672664, 49.6522155588613, 49.1824070385181, 49.7378555291165, 49.1482055073644, 49.5237753573062,
                       48.7804579129397, 48.9598054701382, 48.6391380924072, 47.9263877811072, 48.1133360023890, 48.4667288495728, 48.1415096211261, 47.6973558593869,
                       47.7200618984626, 47.8578307822915, 47.3600697581578, 47.8254605275661, 47.2157626081049, 47.8256342462785, 46.8340155849011, 47.0927322933453,
                       46.4516674915920, 46.5658861225360, 46.4800003656195, 46.6533763620683, 46.6906154558938, 46.3731212504014, 46.0460542625334, 46.2776220125505,
                       46.1476415577697, 45.8190370447096, 45.8293497490370, 45.6568142632161, 45.1118868951172, 45.5108459578971, 44.9608150703932, 44.8517999157099,
                       44.9610595068215, 44.6907244191639, 44.6184293542479, 44.7115827622879, 44.7220252954143, 44.2235878703391, 44.2562789092949, 43.9614850087458,
                       43.9768545280888, 43.9149748315695, 43.4729156814559, 43.6154264961962, 43.5883060698632, 43.3106678454944, 43.6769278775944, 42.8504082267012,
                       42.6868575286134, 42.2580116682064, 42.9311202340168, 42.7931002260069, 42.3840076084053, 42.5525182569358, 42.2130864870501, 42.1202125005880,
                       41.9418588752290, 41.9149611167844, 41.6884741932328, 42.3691760284667, 41.0579759510643, 40.7266857353158, 40.8157711167218, 40.7049724232508,
                       40.7778926711803, 40.7324344966401, 40.5924153921147, 40.6953757908385, 40.5247553212757, 40.5083441555292, 40.6914522299100, 40.3998942256428,
                       39.5229986287413, 39.0842891052377, 39.9285549002082, 38.9822838550021, 39.4280025335538, 39.2936193058740, 39.8261258835731, 39.0122111839161,
                       38.7557785407384, 38.8537183618956, 38.7317169156909, 38.5539890229477, 38.2254013070987, 37.9161974460667, 38.2529255683620, 37.6301146891361,
                       37.5983201569010, 38.1823402256422, 37.5323045016137, 37.4908789435058, 37.6779221587919, 37.1929421584380, 37.4667851737536, 36.9294556686525,
                       37.2118160194016, 36.9717758356021, 36.5940709353304, 36.2732662676145, 36.0950429697214, 36.2019548163283, 36.0265330534421, 35.9103731656838,
                       36.2030390306844, 35.6936663169199, 36.0010791333540, 35.3734894248706, 35.6997451785253, 35.1263003146246, 35.2109487985154, 35.3241968071891,
                       34.7837837776304, 34.6514943046612, 35.2589926433814, 34.8182735099874, 34.2783743070044, 34.4776576813318, 34.0499525697765, 34.2447409659275,
                       34.3327301806537, 33.3016207595436, 33.9666313808233, 33.9703657943213, 33.4222168571052, 33.8068524731582, 33.2045917143831, 32.6618395547239,
                       32.2499271764723, 32.6829533399436, 32.8720384508919, 32.6281977800930, 32.5320585772106, 32.1098497850313, 32.2011760005440, 31.5413757411425,
                       31.6799484605321, 31.5373375312476, 31.8138941265628, 31.5287274423935, 31.0613166496365, 31.2801179852933, 30.9510322988332, 30.8329657140424,
                       31.1672202864722, 30.8170012909908, 30.7774843139725, 30.7981664271931, 30.4620527683188, 30.4482318167399, 30.3628647429563, 30.3841580581334,
                       30.0507336363062, 30.2066452660561, 29.6647580054156, 29.5186146370566, 29.9183758564052, 29.1300619462925, 29.1571189720794, 29.3089355840646,
                       28.9529180799125, 29.2044554938258, 28.9682119219936, 28.6204465467539, 28.1746658986292, 28.4529842893845, 27.7431891122786, 28.1063178627997,
                       28.1505071010730, 27.8468879696478, 27.9218786093927, 28.1446383355469, 27.6851551947294, 27.3630506941015, 27.3504739120492, 27.1606210668103,
                       26.5135584090766, 26.6580520942129, 27.0253818075583, 26.5199001984588, 26.5827024433571, 25.9810254377369, 26.1773304828160, 26.2130630448784,
                       25.4995209736633, 25.8872532497107, 25.6034224945849, 25.2511150303403, 25.3967155034769, 24.7140841120360, 24.5195824296679, 24.6798984609082,
                       24.8728403338548, 24.5034653018198, 24.0231216631414, 24.3125934268995, 23.4332448839200, 23.6299406547670, 23.5183700029074, 22.9669569641058,
                       22.6809326280177, 22.2249278830231, 21.5789471666823, 21.6959794243925, 21.6827475635047, 21.6013484797840, 20.6361881272722, 19.9624281790591,
                       20.1859042477380, 19.9342547731352, 19.4386648605881, 18.8474513131144, 19.4847997798632, 17.8550179467125, 18.0952583862600, 17.5371373227570,
                       17.4281615251020, 17.3997304257179, 17.0311643923349, 16.4619044775566, 16.5936010580159, 16.2325931772516, 15.9254642653548, 15.2889354955019,
                       15.4165742281609, 14.9855871259102, 15.2253817419556, 14.4771628917123, 14.1905764959982, 13.5447686481977, 12.8277341991179, 12.7882586257507,
                       12.3576624250504, 12.1011843248918, 12.1222915680006, 11.4740915808149, 11.0579660593553, 10.8890766835098, 10.6489839699785, 10.5054253291367,
                       9.78220920086402, 9.84857024169739, 9.46215602429342, 9.52144063474809, 8.74554885407354, 8.45453140663338, 7.82884325462391, 7.45004619504145,
                       7.64415249558017, 7.16152828065783, 7.07287321672120, 6.33932657895689, 6.86505369910748, 6.01454421015148, 5.97735998006939, 5.28054894020282,
                       4.98524941753547, 4.92639056935736, 4.57147703142364, 3.75404849955348, 3.31569209582117, 3.13151466913782, 2.72151800352963, 2.84949617656982,
                       2.39362472234033, 2.09197178008773, 1.47946106118190, 1.80699522862050, 1.39032333346611, 0.916988254877657, 0.935604035404268, 0.0524311604913356,
                       0.124410087914288};

const long interval = 125; //interval zapisi danih dlya trenda
unsigned long previousMillis = 0;
//=============== Data and Graphics End Configuration ===============================

//=============== SPIFFS and Peripherals Configuration ==============================
char State = 0;
const char* filename = "/samplefile.txt";
int z = 251;
int ledPin = 2;
Altitude A_p;
Adafruit_BMP085 t;
int Quantity_of_Pressing = 0;
char ledState = 0;
int y = 0;
//=============== SPIFFS and Peripherals End Configuration ==========================

//============= Function's Prototypes ===============================================
void Creation_of_Time_Massive(void);
void tochka(void);
//============= End Function's Prototypes ===========================================

void ICACHE_RAM_ATTR
onTimerISR()
{
  if (ledState == 0)
  {
    digitalWrite(ledPin, HIGH);
    ledState = 1;
  }
  else
  {
    digitalWrite(ledPin, LOW);
    ledState = 0;
  }
}

void handleRoot()
{
  String trendstr;

  trendstr = F("<html>\
  <head>\
    <script type='text/javascript' src='https://www.gstatic.com/charts/loader.js'></script>\
    <meta http-equiv='refresh' content='1000'/>\
    <title>Daily temperature</title>\
    <script type='text/javascript'>\
      google.charts.load('current', {'packages':['corechart']});\
      google.charts.setOnLoadCallback(drawChart);\
\
      function drawChart() {\
        var data = new google.visualization.DataTable();\
      data.addColumn('datetime', 'Time');\
      data.addColumn('number', 'Temp, C');\
      data.addColumn('number', 'Humidity, %');\
\
      data.addRows([");
  uint16_t k, y = 0;
  for (int i = 1; i <= quant_points; i++)
  {
    k = tick - 1 + i;
    if (h[k] > 0)
    {
      if (y > 0)
        trendstr += ",";
      y++;
      if (k > quant_points - 1)
        k = k - quant_points;
      trendstr += "[new Date(";
      trendstr += String(tnow[k] - (2 * 3600)); //2- chasovoy poyas
      trendstr += "*1000), ";
      trendstr += timepoints[k];
      trendstr += ", ";
      trendstr += h[k];
      trendstr += "]";
    }
  }
  trendstr += F("]);\
\
        var options = {width: '100%',\
          title: 'Sky Orange Altimeter',\
          curveType: 'function',\
          legend: { position: 'bottom' },\
          hAxis: {format: 'dd.MM.yyyy HH:mm',\
          gridlines: {\
            count: 10,\
          },\
        }\
        };\
\
        var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));\
        var formatter = new google.visualization.DateFormat({pattern: 'dd.MM.yyyy HH:mm'});\
        formatter.format(data, 0);\
        chart.draw(data, options);\
      }\
    </script>\
  </head>\
  <body>\
    <div id='curve_chart' style='width: 100%; height: 600px'></div>\
  </body>\
</html>");
  server.send(200, F("text/html"), trendstr);
}

void setup() {
  delay(1000);
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  WiFi.config(ip, gateway, subnet);
  configTime(2 * 3600, 0, "pool.ntp.org", "time.nist.gov"); //NTP sayti dlia schitivaniya vremeni
  Serial.println("");
  // Wait for connection
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
  server.on("/", handleRoot);
  server.begin();
  Serial.println("HTTP server started");
  //dht.begin();
  Creation_of_Time_Massive();

  delay(2000);
  tochka();
    
  Wire.begin(4, 5);
  // if (!t.begin()) {
	// Serial.println("Could not find a valid BMP085 sensor, check wiring!");
	// while (1) {}
  // }
 
  //Initialize File System
  if(SPIFFS.begin())
  {
    Serial.println("SPIFFS Initialize....ok");
  }
  else
  {
    Serial.println("SPIFFS Initialization...failed");
  }
 
  //Format File System
  if(SPIFFS.format())
  {
    Serial.println("File System Formated");
  }
  else
  {
    Serial.println("File System Formatting Error");
  }

}


void loop()
{
  while (WiFi.status() != WL_CONNECTED)
  {
    File f = SPIFFS.open(filename, "a");
    if (!f)
    {
      Serial.println("file open failed");
    }
    else
    {
      Serial.print("Mode_1:  ");
      // f.println(A_p.Calculate_Altitude());
      f.close();
    }
  }

  server.handleClient();

  unsigned long currentMillis = millis();
  if (currentMillis - previousMillis >= interval)
  {
    previousMillis = currentMillis;
    tochka();
  }

  //  else if (Quantity_of_Pressing == 2)
  //  {
  //    Serial.println("Mode_2");
  //    timer1_write(900000);
  //    File f = SPIFFS.open(filename, "r"); //Read File data
  //    if (!f)
  //    {
  //      Serial.println("file open failed");
  //    }
  //    else
  //    {
  //      for (int i = 0; i < f.size(); i++) //Read upto complete file size
  //      {
  //        Serial.print((char)f.read());
  //      }
  //      f.close(); //Close file
  //      Serial.println("File Closed");
  //      Quantity_of_Pressing = 0;
  //    }
  //  }

  //  else if (Quantity_of_Pressing == 3)
  //  {
  // начинаем прослушку входящих клиентов:
}

void tochka()
{
  h[tick] = Data_Massiv[tick];
  //t[tick] = dht.readTemperature();
  Serial.print(h[tick]);
  Serial.print("    ");
  Serial.println(timepoints[tick]);
  tnow[tick] = time(nullptr);
  Serial.print(String(ctime(&tnow[tick])));
  if (tick < quant_points - 1)
    tick++;
  else
    tick = 0;
}

void Creation_of_Time_Massive()
{
  int t_Old = 0;
  Data_Length = sizeof(h) / sizeof(float);
  for (int k = 0; k < Data_Length; k++)
  {
    timepoints[k] = t_Old + 0.125;
    t_Old = timepoints[k];
  }
}
